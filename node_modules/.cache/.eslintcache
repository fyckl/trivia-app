[{"I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\index.js":"1","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\App.js":"2","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Context.js":"3","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Start.js":"4","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Questions.js":"5","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Answer.js":"6","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Question.js":"7","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Error.js":"8","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Loading.js":"9","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Hooks\\useShuffleArr.js":"10","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Hooks\\useMappedQuestions.js":"11"},{"size":321,"mtime":1648628685124,"results":"12","hashOfConfig":"13"},{"size":713,"mtime":1650260337563,"results":"14","hashOfConfig":"13"},{"size":2708,"mtime":1650260290068,"results":"15","hashOfConfig":"13"},{"size":633,"mtime":1650105084538,"results":"16","hashOfConfig":"13"},{"size":1250,"mtime":1650263425997,"results":"17","hashOfConfig":"13"},{"size":1180,"mtime":1650276003647,"results":"18","hashOfConfig":"13"},{"size":1082,"mtime":1650276793616,"results":"19","hashOfConfig":"13"},{"size":192,"mtime":1650083235874,"results":"20","hashOfConfig":"13"},{"size":192,"mtime":1650082854130,"results":"21","hashOfConfig":"13"},{"size":347,"mtime":1650153412298,"results":"22","hashOfConfig":"13"},{"size":368,"mtime":1650262195537,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"g19fi2",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\index.js",[],[],["63","64"],"I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\App.js",["65","66"],[],"import React, { useContext } from \"react\";\nimport Start from \"./Components/Start\";\nimport Questions from \"./Components/Questions\";\nimport Error from \"./Components/Error\"; \nimport Loading from \"./Components/Loading\";\nimport { Context, useAppContext } from \"./Components/Context\"\n\nfunction App() {\n  const { \n    startQuiz, \n    isStartQuiz, \n    arrQuestions , \n    isAPIError\n  } = useAppContext()\n  const renderQuestionsOrLoading = arrQuestions.length === 5 ? <Questions /> : <Loading />\n  const renderQuiz = isStartQuiz ? renderQuestionsOrLoading : <Start start={startQuiz}/>\n  \n  return (\n    <div className=\"main-container\">\n      {isAPIError ? <Error /> : renderQuiz}\n    </div>\n  );\n\n}\n\nexport default App;\n","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Context.js",["67"],[],"import React, { createContext, useState, useEffect, useContext } from 'react'\r\n\r\nconst Context = createContext()\r\nconst useAppContext = () => useContext(Context);\r\n\r\nfunction ContextProvider(props) {\r\n\r\n    const [isStartQuiz, setIsStartQuiz] = useState(false)\r\n    const [arrQuestions, setArrQuestions] = useState([])\r\n    const [isPlayAgain, setIsPlayAgain] = useState(false)\r\n    const [isShuffleAnswers, setIsShuffleAnswers] = useState(false)\r\n    const [isAPIError, setIsAPIError] = useState(false)\r\n    const [correctAnswers, setCorrectAnswers] = useState(0)\r\n    const [score, setScore] = useState(0)\r\n    const [selectedAnswers, setSelectedAnswers] = useState([])\r\n\r\n    function startQuiz(){\r\n      setIsShuffleAnswers(true)\r\n      setIsStartQuiz(true)\r\n    }\r\n\r\n    function newSelectedAnswersArr(){\r\n      setSelectedAnswers(() => {\r\n        const newArr = []\r\n        arrQuestions.forEach(item => {\r\n          newArr.push({id: item.correct_answer, selectedAnswer: \"\"}) \r\n        });\r\n        return newArr\r\n      })\r\n    }\r\n\r\n    function checkAnswers(){\r\n      setIsShuffleAnswers(false)\r\n      setIsPlayAgain(true)\r\n      setCorrectAnswers(() => {\r\n        const correctAnswersArr = selectedAnswers.filter(item => (\r\n          item.selectedAnswer === item.id\r\n          )) \r\n          return correctAnswersArr.length\r\n        })\r\n      }\r\n      \r\n      \r\n    function reset(){\r\n      setArrQuestions([])\r\n      getQuestions()\r\n      setIsPlayAgain(false)\r\n      setCorrectAnswers(0)\r\n      setIsShuffleAnswers(true)\r\n    }\r\n    \r\n    function getQuestions(){\r\n      fetch('https://opentdb.com/api.php?amount=5&difficulty=easy&type=multiple&encode=base64')\r\n      .then(res=> res.json())\r\n      .then(data=> setArrQuestions(data.results))\r\n      .catch(err => {\r\n        setIsStartQuiz(false)\r\n        setIsAPIError(true)\r\n      })\r\n    }\r\n\r\n    useEffect(() => {\r\n      setScore(prevState => prevState + correctAnswers)\r\n    }, [correctAnswers])\r\n    \r\n    useEffect(() => {\r\n      newSelectedAnswersArr()\r\n    }, [arrQuestions])\r\n    \r\n    useEffect(() => {\r\n      getQuestions()\r\n    }, [])\r\n\r\n    return(\r\n        <Context.Provider \r\n            value={{\r\n                startQuiz, \r\n                isStartQuiz, \r\n                arrQuestions,\r\n                setCorrectAnswers,\r\n                checkAnswers,\r\n                isPlayAgain,\r\n                correctAnswers,\r\n                reset,\r\n                score,\r\n                isShuffleAnswers,\r\n                setSelectedAnswers,\r\n                selectedAnswers,\r\n                isAPIError\r\n        }}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context, useAppContext}","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Start.js",[],[],"I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Questions.js",["68","69","70"],[],"import React, { useContext } from 'react'\r\nimport Question from './Question'\r\nimport useMappedQuestions from '../Hooks/useMappedQuestions'\r\nimport { Context, useAppContext } from \"./Context\"\r\n\r\nexport default function Questions(props) {\r\n  const {\r\n    arrQuestions, \r\n    checkAnswers, \r\n    isPlayAgain, \r\n    correctAnswers, \r\n    reset, \r\n    score\r\n  } = useAppContext()\r\n\r\n  // function questions(arr){ arr.map(item => (\r\n  //   <Question \r\n  //     key={item.question}\r\n  //     question={item.question} \r\n  //     correctAnswer={item.correct_answer} \r\n  //     incorrectAnswers={item.incorrect_answers}\r\n  //   />\r\n  // ))\r\n  // }\r\n  \r\n  return (\r\n    <div className='text-center questions-container' data-testid=\"container\">\r\n      {useMappedQuestions(arrQuestions)}\r\n\r\n      {\r\n        isPlayAgain ? \r\n        <div className='flex' id=\"post-game-details-container\">\r\n          <h4 className='inter'>You got {correctAnswers}/5 questions right</h4>\r\n          <button className='again-button' onClick={reset}>Play again</button>\r\n        </div> : \r\n        <button className='check-button' onClick={checkAnswers} id=\"check-answers\">Check answers</button>\r\n      }\r\n\r\n      <h4 className='inter score'>Score: {score}</h4>\r\n    </div>\r\n  )\r\n}\r\n","I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Answer.js",["71","72"],[],"import React, { useContext } from 'react'\r\nimport { Context, useAppContext } from \"./Context\"\r\nimport { Buffer } from 'buffer'\r\n\r\nexport default function Answer({ answers, correctAnswer}) {\r\n\r\n  const {\r\n    isPlayAgain, \r\n    selectedAnswers, \r\n    setSelectedAnswers\r\n  } = useAppContext()\r\n  \r\n  const selectedAnswer = (answer) => answer.selectedAnswer !== answers\r\n  const isSelected = selectedAnswers.every(selectedAnswer)\r\n\r\n  const selectedAnswerClass = \r\n  !isPlayAgain ? \r\n  (isSelected ? \"answer-button\" : \"selected-answer\") : \r\n  (isSelected ? \"answer-button\" : \"incorrect-answer\")\r\n\r\n  const buttonClass = \r\n  (isPlayAgain && (correctAnswer === answers)) ? \r\n  \"correct-answer\" : \r\n  selectedAnswerClass\r\n\r\n  const decodedAnswers = Buffer.from(answers, 'base64').toString()\r\n  function selectAnswer(){\r\n    setSelectedAnswers(prevState => prevState.map(item => {\r\n      return correctAnswer === item.id ? {...item, selectedAnswer: answers} : {...item}\r\n    }))\r\n  }\r\n\r\n  return (\r\n        <button \r\n          className={buttonClass} \r\n          onClick={selectAnswer} \r\n          disabled={isPlayAgain}\r\n        >\r\n          {decodedAnswers}\r\n        </button>\r\n  )\r\n}",["73","74"],"I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Question.js",["75","76","77"],[],"I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Error.js",[],[],"I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Components\\Loading.js",[],[],"I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Hooks\\useShuffleArr.js",[],[],"I:\\My-work\\Web-development\\React 2022 Course\\trivia-app\\src\\Hooks\\useMappedQuestions.js",[],[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":27},{"ruleId":"82","severity":1,"message":"86","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":68,"column":8,"nodeType":"89","endLine":68,"endColumn":22,"suggestions":"90"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":27},{"ruleId":"82","severity":1,"message":"91","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":27},{"ruleId":"82","severity":1,"message":"86","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":17},{"ruleId":"78","replacedBy":"92"},{"ruleId":"80","replacedBy":"93"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":38,"nodeType":"84","messageId":"85","endLine":1,"endColumn":48},{"ruleId":"82","severity":1,"message":"86","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":17},{"ruleId":"87","severity":1,"message":"94","line":18,"column":6,"nodeType":"89","endLine":18,"endColumn":24,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Context' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newSelectedAnswersArr'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'Question' is defined but never used.",["96"],["97"],"React Hook useEffect has a missing dependency: 'shuffleArr'. Either include it or remove the dependency array.",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [arrQuestions, newSelectedAnswersArr]",{"range":"104","text":"105"},"Update the dependencies array to be: [isShuffleAnswers, shuffleArr]",{"range":"106","text":"107"},[2028,2042],"[arrQuestions, newSelectedAnswersArr]",[623,641],"[isShuffleAnswers, shuffleArr]"]