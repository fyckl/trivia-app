{"ast":null,"code":"var _jsxFileName = \"I:\\\\My-work\\\\Web-development\\\\React 2022 Course\\\\trivia-app\\\\src\\\\Components\\\\Answer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Context } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Answer(props) {\n  _s();\n\n  const {\n    setCorrectAnswers,\n    playAgain\n  } = useContext(Context);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [correctAnswer, setCorrectAnswer] = useState(props.correctanswer);\n  const selectedAnswerClass = selectedAnswer === props.answers ? \"selected-answer\" : \"answer-button\";\n\n  function selectAnswer() {\n    setSelectedAnswer(props.answers);\n  }\n\n  useEffect(() => {\n    if (selectedAnswer === correctAnswer) {\n      setCorrectAnswers(prevState => prevState + 1);\n    }\n  }, [playAgain]);\n  console.log(selectedAnswer); // console.log(props.answers)\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: selectedAnswerClass,\n    onClick: selectAnswer,\n    children: atob(props.answers)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n} // Make state with object that includes both correct and selected answers\n\n_s(Answer, \"AtIJHmDfvSDTl7ePGQZhJ90Mkug=\");\n\n_c = Answer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"sources":["I:/My-work/Web-development/React 2022 Course/trivia-app/src/Components/Answer.js"],"names":["React","useState","useEffect","useContext","Context","Answer","props","setCorrectAnswers","playAgain","selectedAnswer","setSelectedAnswer","correctAnswer","setCorrectAnswer","correctanswer","selectedAnswerClass","answers","selectAnswer","prevState","console","log","atob"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,QAAM;AAACC,IAAAA,iBAAD;AAAoBC,IAAAA;AAApB,MAAiCL,UAAU,CAACC,OAAD,CAAjD;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAACK,KAAK,CAACO,aAAP,CAAlD;AAEA,QAAMC,mBAAmB,GAAGL,cAAc,KAAKH,KAAK,CAACS,OAAzB,GAAmC,iBAAnC,GAAuD,eAAnF;;AAEA,WAASC,YAAT,GAAuB;AACrBN,IAAAA,iBAAiB,CAACJ,KAAK,CAACS,OAAP,CAAjB;AACD;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGO,cAAc,KAAKE,aAAtB,EAAoC;AAClCJ,MAAAA,iBAAiB,CAACU,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAjB;AACD;AACF,GAJQ,EAIN,CAACT,SAAD,CAJM,CAAT;AAOAU,EAAAA,OAAO,CAACC,GAAR,CAAYV,cAAZ,EAlBoC,CAmBpC;;AACA,sBACM;AACA,IAAA,SAAS,EAAEK,mBADX;AAEA,IAAA,OAAO,EAAEE,YAFT;AAAA,cAEwBI,IAAI,CAACd,KAAK,CAACS,OAAP;AAF5B;AAAA;AAAA;AAAA;AAAA,UADN;AAKD,C,CACD;;GA1BwBV,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { Context } from \"./Context\"\r\n\r\nexport default function Answer(props) {\r\n  const {setCorrectAnswers, playAgain} = useContext(Context)\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null)\r\n  const [correctAnswer, setCorrectAnswer] = useState(props.correctanswer)\r\n  \r\n  const selectedAnswerClass = selectedAnswer === props.answers ? \"selected-answer\" : \"answer-button\"\r\n  \r\n  function selectAnswer(){\r\n    setSelectedAnswer(props.answers)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(selectedAnswer === correctAnswer){\r\n      setCorrectAnswers(prevState => prevState + 1)\r\n    }\r\n  }, [playAgain])\r\n  \r\n  \r\n  console.log(selectedAnswer)\r\n  // console.log(props.answers)\r\n  return (\r\n        <button \r\n        className={selectedAnswerClass} \r\n        onClick={selectAnswer}>{atob(props.answers)}</button>\r\n  )\r\n}\r\n// Make state with object that includes both correct and selected answers"]},"metadata":{},"sourceType":"module"}