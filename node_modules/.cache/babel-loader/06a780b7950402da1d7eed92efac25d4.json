{"ast":null,"code":"var _jsxFileName = \"I:\\\\My-work\\\\Web-development\\\\React 2022 Course\\\\trivia-app\\\\src\\\\Components\\\\Answer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Context } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Answer(props) {\n  _s();\n\n  const {\n    setCorrectAnswers,\n    playAgain,\n    selectedAnswers,\n    setSelectedAnswers\n  } = useContext(Context);\n  const [correctAnswer, setCorrectAnswer] = useState(props.correctanswer);\n\n  const isSelected = answer => answer.selectedAnswer !== props.answers;\n\n  const selectedAnswerClass = selectedAnswers.every(isSelected) ? \"answer-button\" : \"selected-answer\";\n\n  function selectAnswer() {\n    setSelectedAnswers(prevState => prevState.map(item => {\n      return correctAnswer === item.id ? { ...item,\n        selectedAnswer: props.answers\n      } : { ...item\n      };\n    }));\n  } // useEffect(() => {\n  //   if(!selectedAnswers.every(isCorrect)){\n  //     setCorrectAnswers(prevState => prevState + 1)\n  //   }\n  // }, [playAgain])\n  // console.log(selectedAnswer)\n  // console.log(props.answers)\n\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: selectedAnswerClass,\n    onClick: selectAnswer,\n    children: [atob(props.answers), \"disabled=\\\"true\\\"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n} // Make state with object that includes both correct and selected answers\n\n_s(Answer, \"YPbLDVC7YXRC0n6RWHCiNL419O4=\");\n\n_c = Answer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"sources":["I:/My-work/Web-development/React 2022 Course/trivia-app/src/Components/Answer.js"],"names":["React","useState","useEffect","useContext","Context","Answer","props","setCorrectAnswers","playAgain","selectedAnswers","setSelectedAnswers","correctAnswer","setCorrectAnswer","correctanswer","isSelected","answer","selectedAnswer","answers","selectedAnswerClass","every","selectAnswer","prevState","map","item","id","atob"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,QAAM;AACJC,IAAAA,iBADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA;AAJI,MAKFP,UAAU,CAACC,OAAD,CALd;AAOA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAACK,KAAK,CAACO,aAAP,CAAlD;;AAEA,QAAMC,UAAU,GAAIC,MAAD,IAAYA,MAAM,CAACC,cAAP,KAA0BV,KAAK,CAACW,OAA/D;;AAEA,QAAMC,mBAAmB,GAAGT,eAAe,CAACU,KAAhB,CAAsBL,UAAtB,IAAoC,eAApC,GAAsD,iBAAlF;;AAEA,WAASM,YAAT,GAAuB;AACrBV,IAAAA,kBAAkB,CAACW,SAAS,IAAIA,SAAS,CAACC,GAAV,CAAcC,IAAI,IAAI;AACpD,aAAOZ,aAAa,KAAKY,IAAI,CAACC,EAAvB,GAA4B,EAAC,GAAGD,IAAJ;AAAUP,QAAAA,cAAc,EAAEV,KAAK,CAACW;AAAhC,OAA5B,GAAuE,EAAC,GAAGM;AAAJ,OAA9E;AACD,KAF+B,CAAd,CAAlB;AAGD,GAlBmC,CAoBpC;AACA;AACA;AACA;AACA;AAGA;AACA;;;AACA,sBACM;AACA,IAAA,SAAS,EAAEL,mBADX;AAEA,IAAA,OAAO,EAAEE,YAFT;AAAA,eAEwBK,IAAI,CAACnB,KAAK,CAACW,OAAP,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAOD,C,CACD;;GArCwBZ,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { Context } from \"./Context\"\r\n\r\nexport default function Answer(props) {\r\n  const {\r\n    setCorrectAnswers, \r\n    playAgain, \r\n    selectedAnswers, \r\n    setSelectedAnswers\r\n  } = useContext(Context)\r\n  \r\n  const [correctAnswer, setCorrectAnswer] = useState(props.correctanswer)\r\n  \r\n  const isSelected = (answer) => answer.selectedAnswer !== props.answers\r\n\r\n  const selectedAnswerClass = selectedAnswers.every(isSelected) ? \"answer-button\" : \"selected-answer\"\r\n  \r\n  function selectAnswer(){\r\n    setSelectedAnswers(prevState => prevState.map(item => {\r\n      return correctAnswer === item.id ? {...item, selectedAnswer: props.answers} : {...item}\r\n    }))\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if(!selectedAnswers.every(isCorrect)){\r\n  //     setCorrectAnswers(prevState => prevState + 1)\r\n  //   }\r\n  // }, [playAgain])\r\n  \r\n  \r\n  // console.log(selectedAnswer)\r\n  // console.log(props.answers)\r\n  return (\r\n        <button \r\n        className={selectedAnswerClass} \r\n        onClick={selectAnswer}>{atob(props.answers)} \r\n        disabled=\"true\"\r\n        </button>\r\n  )\r\n}\r\n// Make state with object that includes both correct and selected answers"]},"metadata":{},"sourceType":"module"}