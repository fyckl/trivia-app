{"ast":null,"code":"var _jsxFileName = \"I:\\\\My-work\\\\Web-development\\\\React 2022 Course\\\\trivia-app\\\\src\\\\Components\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Answer from './Answer';\nimport { Context } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  _s();\n\n  let {\n    question,\n    incorrectAnswers,\n    correctAnswer\n  } = _ref;\n  const arrAnswers = incorrectAnswers.concat(correctAnswer);\n  const {\n    shuffleAnswers\n  } = useContext(Context);\n\n  function shuffleArr(arr) {\n    let currentIndex = arr.length,\n        randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [arr[currentIndex], arr[randomIndex]] = [arr[randomIndex], arr[currentIndex]];\n    }\n\n    return arr;\n  }\n\n  const shuffledAnswers = shuffleArr(arrAnswers);\n  const answers = shuffledAnswers.map(item => {\n    if (shuffleAnswers) {\n      return /*#__PURE__*/_jsxDEV(Answer, {\n        answers: item,\n        correctanswer: correctAnswer\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    } else {\n      return item;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"question\",\n      children: atob(question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), answers, /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"bcJdjz6HRT9ymW+FuPmTYwSwKCA=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["I:/My-work/Web-development/React 2022 Course/trivia-app/src/Components/Question.js"],"names":["React","useState","useEffect","useContext","Answer","Context","Question","question","incorrectAnswers","correctAnswer","arrAnswers","concat","shuffleAnswers","shuffleArr","arr","currentIndex","length","randomIndex","Math","floor","random","shuffledAnswers","answers","map","item","atob"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,SAASC,QAAT,OAA+D;AAAA;;AAAA,MAA7C;AAACC,IAAAA,QAAD;AAAWC,IAAAA,gBAAX;AAA6BC,IAAAA;AAA7B,GAA6C;AAC7D,QAAMC,UAAU,GAAGF,gBAAgB,CAACG,MAAjB,CAAwBF,aAAxB,CAAnB;AACA,QAAM;AAACG,IAAAA;AAAD,MAAmBT,UAAU,CAACE,OAAD,CAAnC;;AACA,WAASQ,UAAT,CAAoBC,GAApB,EAAwB;AAEtB,QAAIC,YAAY,GAAGD,GAAG,CAACE,MAAvB;AAAA,QAA+BC,WAA/B;;AAEA,WAAMF,YAAY,KAAK,CAAvB,EAAyB;AAEvBE,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;AAEAA,MAAAA,YAAY;AAEZ,OAACD,GAAG,CAACC,YAAD,CAAJ,EAAoBD,GAAG,CAACG,WAAD,CAAvB,IAAwC,CACtCH,GAAG,CAACG,WAAD,CADmC,EACpBH,GAAG,CAACC,YAAD,CADiB,CAAxC;AAGD;;AAED,WAAOD,GAAP;AAED;;AAED,QAAMO,eAAe,GAAGR,UAAU,CAACH,UAAD,CAAlC;AAEA,QAAMY,OAAO,GAAGD,eAAe,CAACE,GAAhB,CAAqBC,IAAD,IAAU;AAC5C,QAAGZ,cAAH,EAAkB;AAChB,0BAAO,QAAC,MAAD;AAAmB,QAAA,OAAO,EAAEY,IAA5B;AAAkC,QAAA,aAAa,EAAEf;AAAjD,SAAae,IAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEM;AACJ,aAAOA,IAAP;AACD;AACF,GANe,CAAhB;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BC,IAAI,CAAClB,QAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKe,OAFL,eAGI;AAAI,MAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvCQhB,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\r\nimport Answer from './Answer'\r\nimport { Context } from \"./Context\"\r\n\r\nfunction Question({question, incorrectAnswers, correctAnswer}) {\r\n  const arrAnswers = incorrectAnswers.concat(correctAnswer)\r\n  const {shuffleAnswers} = useContext(Context)\r\n  function shuffleArr(arr){\r\n\r\n    let currentIndex = arr.length, randomIndex\r\n\r\n    while(currentIndex !== 0){\r\n\r\n      randomIndex = Math.floor(Math.random() * currentIndex)\r\n\r\n      currentIndex--\r\n\r\n      [arr[currentIndex], arr[randomIndex]] = [\r\n        arr[randomIndex], arr[currentIndex]]\r\n\r\n    }\r\n\r\n    return arr\r\n\r\n  }\r\n \r\n  const shuffledAnswers = shuffleArr(arrAnswers)\r\n\r\n  const answers = shuffledAnswers.map((item) => {\r\n    if(shuffleAnswers){\r\n      return <Answer key={item} answers={item} correctanswer={correctAnswer}/>\r\n    } else{\r\n      return item\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className='question-container'>\r\n        <h3 className='question'>{atob(question)}</h3>\r\n        {answers}\r\n        <hr className='hr'/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question"]},"metadata":{},"sourceType":"module"}