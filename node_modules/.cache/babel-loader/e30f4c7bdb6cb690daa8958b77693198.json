{"ast":null,"code":"var _jsxFileName = \"I:\\\\My Work\\\\Web Development\\\\React 2022 Course\\\\trivia-app\\\\src\\\\Components\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Answer from './Answer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  _s();\n\n  let {\n    question,\n    incorrectAnswers,\n    correctAnswer\n  } = _ref;\n  const arrAnswers = incorrectAnswers.concat(correctAnswer);\n\n  function shuffleArr(arr) {\n    let currentIndex = arr.length,\n        randomIndex;\n\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [arr[currentIndex], arr[randomIndex]] = [arr[randomIndex], arr[currentIndex]];\n    }\n\n    return arr;\n  }\n\n  useEffect(() => {\n    let shuffledAnswers = shuffleArr(arrAnswers);\n  }, []);\n  const answers = shuffledAnswers.map(item => {\n    return /*#__PURE__*/_jsxDEV(Answer, {\n      answers: item,\n      correctanswer: correctAnswer\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: atob(question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), answers, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["I:/My Work/Web Development/React 2022 Course/trivia-app/src/Components/Question.js"],"names":["React","useEffect","Answer","Question","question","incorrectAnswers","correctAnswer","arrAnswers","concat","shuffleArr","arr","currentIndex","length","randomIndex","Math","floor","random","shuffledAnswers","answers","map","item","atob"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AACA,SAASC,QAAT,OAA+D;AAAA;;AAAA,MAA7C;AAACC,IAAAA,QAAD;AAAWC,IAAAA,gBAAX;AAA6BC,IAAAA;AAA7B,GAA6C;AAC7D,QAAMC,UAAU,GAAGF,gBAAgB,CAACG,MAAjB,CAAwBF,aAAxB,CAAnB;;AAEA,WAASG,UAAT,CAAoBC,GAApB,EAAwB;AAEtB,QAAIC,YAAY,GAAGD,GAAG,CAACE,MAAvB;AAAA,QAA+BC,WAA/B;;AAEA,WAAMF,YAAY,IAAI,CAAtB,EAAwB;AAEtBE,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;AAEAA,MAAAA,YAAY;AAEZ,OAACD,GAAG,CAACC,YAAD,CAAJ,EAAoBD,GAAG,CAACG,WAAD,CAAvB,IAAwC,CACtCH,GAAG,CAACG,WAAD,CADmC,EACpBH,GAAG,CAACC,YAAD,CADiB,CAAxC;AAGD;;AAED,WAAOD,GAAP;AAED;;AACDT,EAAAA,SAAS,CAAC,MAAK;AACb,QAAIgB,eAAe,GAAGR,UAAU,CAACF,UAAD,CAAhC;AACD,GAFQ,EAEP,EAFO,CAAT;AAKA,QAAMW,OAAO,GAAGD,eAAe,CAACE,GAAhB,CAAqBC,IAAD,IAAU;AAC5C,wBAAO,QAAC,MAAD;AAAmB,MAAA,OAAO,EAAEA,IAA5B;AAAkC,MAAA,aAAa,EAAEd;AAAjD,OAAac,IAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFe,CAAhB;AAIA,sBACE;AAAA,4BACI;AAAA,gBAAKC,IAAI,CAACjB,QAAD;AAAT;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKc,OAFL,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArCQf,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport Answer from './Answer'\r\nfunction Question({question, incorrectAnswers, correctAnswer}) {\r\n  const arrAnswers = incorrectAnswers.concat(correctAnswer)\r\n  \r\n  function shuffleArr(arr){\r\n\r\n    let currentIndex = arr.length, randomIndex\r\n\r\n    while(currentIndex != 0){\r\n\r\n      randomIndex = Math.floor(Math.random() * currentIndex)\r\n\r\n      currentIndex--\r\n\r\n      [arr[currentIndex], arr[randomIndex]] = [\r\n        arr[randomIndex], arr[currentIndex]]\r\n\r\n    }\r\n\r\n    return arr\r\n\r\n  }\r\n  useEffect(() =>{\r\n    let shuffledAnswers = shuffleArr(arrAnswers)\r\n  },[])\r\n  \r\n\r\n  const answers = shuffledAnswers.map((item) => {\r\n    return <Answer key={item} answers={item} correctanswer={correctAnswer}/>\r\n  })\r\n\r\n  return (\r\n    <div>\r\n        <h3>{atob(question)}</h3>\r\n        {answers}\r\n        <hr/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question"]},"metadata":{},"sourceType":"module"}